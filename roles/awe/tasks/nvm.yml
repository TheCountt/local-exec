---
- name: Setup Node
  become: true
  become_flags: -i # Execute config files such as .bashrc (Ansible uses non-interactive login shells)
  block:
    - name: Install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.38.0/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

    - name: Setup .bashrc
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: source ~/.nvm/nvm.sh # This will make sure Node is on the user's PATH
        create: yes
    
    - name: Install node
      ansible.builtin.shell: >
         source ~/.nvm/nvm.sh && nvm install {{item}}
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/versions/node/v{{item}}"
      loop:
        - 14.17.1





# # - name: NVM | nvm | get stats on nvm destination
# #   stat:
# #     path: "{{ nvm_dest }}"
# #   register: nvm_stat

# # - name: NVM | nvm | create .nvm directory
# #   file:
# #     path: "{{ nvm_dest }}"
# #     group: "{{ nvm_group | default(nvm_user) }}"
# #     owner: "{{ nvm_user }}"
# #     mode: 0755
# #     recurse: yes
# #     state: directory
# #   when: not nvm_stat.stat.exists

# # - name: NVM | nvm | download nvm script
# #   get_url:
# #     dest: "{{ nvm_dest }}"
# #     group: "{{ nvm_group | default(nvm_user) }}"
# #     owner: "{{ nvm_user }}"
# #     mode: 0755
# #     url: https://raw.githubusercontent.com/creationix/nvm/{{ nvm_version }}/nvm.sh

# # - name: NVM | nvm | add nvm line 1 to ~/.bashrc
# #   lineinfile:
# #     path: "{{ nvm_working_path }}/.bashrc"
# #     line: export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"

# # - name: NVM | nvm | add nvm line 2 to ~/.bashrc
# #   lineinfile:
# #     path: "{{ nvm_working_path }}/.bashrc"
# #     line: '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'


# - name: Setup Node
#   become: true
#   become_flags: -i # Execute config files such as .profile (Ansible uses non-interactive login shells)
#   block:
#     - name: Install nvm
#       ansible.builtin.shell: >
#         curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.38.0/install.sh | bash
#       args:
#         executable: /bin/bash
#         chdir: "$HOME"
#         creates: "$HOME/.nvm/nvm.sh"

#     - name: Setup .profile
#       ansible.builtin.lineinfile:
#         path: ~/.bashrc
#         line: source ~/.nvm/nvm.sh # This will make sure Node is on the user's PATH
#         create: yes

#     - name: Install node
#       ansible.builtin.shell: |
#         nvm install {{item}}
#       args:
#         executable: /bin/bash
#         chdir: "$HOME"
#         creates: "$HOME/.nvm/versions/node/v{{item}}"
#       loop:
#         - 14.17.1



#   # - name: NVM | nvm | add nvm line 1 to ~/.bashrc
# #   lineinfile:
# #     path: ~/.bashrc
# #     line: export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"

# # - name: NVM | nvm | add nvm line 2 to ~/.bashrc
# #   lineinfile:
# #     path: ~/.bashrc
# #     line: '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'